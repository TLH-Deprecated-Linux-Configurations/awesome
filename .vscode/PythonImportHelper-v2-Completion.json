[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "urllib.parse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "urllib.request",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.request",
        "description": "urllib.request",
        "detail": "urllib.request",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "gzip",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "gzip",
        "description": "gzip",
        "detail": "gzip",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "html",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "html",
        "description": "html",
        "detail": "html",
        "documentation": {}
    },
    {
        "label": "dbus",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dbus",
        "description": "dbus",
        "detail": "dbus",
        "documentation": {}
    },
    {
        "label": "DBusGMainLoop",
        "importPath": "dbus.mainloop.glib",
        "description": "dbus.mainloop.glib",
        "isExtraImport": true,
        "detail": "dbus.mainloop.glib",
        "documentation": {}
    },
    {
        "label": "gi.repository.GLib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "gi.repository.GLib",
        "description": "gi.repository.GLib",
        "detail": "gi.repository.GLib",
        "documentation": {}
    },
    {
        "label": "getENV",
        "kind": 2,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "def getENV(name, default=\"\"):\n    ENV = os.environ.get(name)\n    if ENV == None:\n        return default\n    return ENV\n################################################################################\n#####                      C O N F I G U R A T I O N                      ######\n################################################################################\nSEARCH_ENGINE = getENV('SEARCH_ENGINE', 'google')            # or 'duckduckgo'\nBROWSER = getENV('BROWSER', 'firefox-developer-edition')              # or 'firefox', 'chromium', 'brave', 'lynx'",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "cleanhtml",
        "kind": 2,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "def cleanhtml(txt):\n    return re.sub(r'<.*?>', '', txt)\ndef fetch_suggestions(search_string):\n    if SEARCH_ENGINE == 'google':\n        r = {\n            'q' : search_string,\n            'cp' : '11',\n            'client' : 'psy-ab',\n            'xssi' : 't',\n            'gs_ri' : 'gws-wiz',",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "fetch_suggestions",
        "kind": 2,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "def fetch_suggestions(search_string):\n    if SEARCH_ENGINE == 'google':\n        r = {\n            'q' : search_string,\n            'cp' : '11',\n            'client' : 'psy-ab',\n            'xssi' : 't',\n            'gs_ri' : 'gws-wiz',\n            'hl' : 'en-IT',\n            'authuser' : '0'",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "def main():\n    search_string = html.unescape((' '.join(sys.argv[1:])).strip())\n    if search_string.endswith('!'):\n        search_string = search_string.rstrip('!').strip()\n        results = fetch_suggestions(search_string)\n        for r in results:\n            print(html.unescape(r))\n    elif search_string == '':\n        print('Search with %s' % CONFIG['SEARCH_ENGINE_NAME'][SEARCH_ENGINE])\n        print('End string with \"!\" to your get search suggestions')",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "SEARCH_ENGINE",
        "kind": 5,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "SEARCH_ENGINE = getENV('SEARCH_ENGINE', 'google')            # or 'duckduckgo'\nBROWSER = getENV('BROWSER', 'firefox-developer-edition')              # or 'firefox', 'chromium', 'brave', 'lynx'\nTERMINAL = [getENV('TERMINAL', 'st'), '-e']\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "BROWSER",
        "kind": 5,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "BROWSER = getENV('BROWSER', 'firefox-developer-edition')              # or 'firefox', 'chromium', 'brave', 'lynx'\nTERMINAL = [getENV('TERMINAL', 'st'), '-e']\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "TERMINAL",
        "kind": 5,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "TERMINAL = [getENV('TERMINAL', 'st'), '-e']\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']\n    },",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "CONFIG",
        "kind": 5,
        "importPath": "external.rofi.sidebar.web-search",
        "description": "external.rofi.sidebar.web-search",
        "peekOfCode": "CONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']\n    },\n    'USER_AGENT' : {\n        'chrome' : 'Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36',",
        "detail": "external.rofi.sidebar.web-search",
        "documentation": {}
    },
    {
        "label": "cleanhtml",
        "kind": 2,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "def cleanhtml(txt):\n    return re.sub(r'<.*?>', '', txt)\ndef fetch_suggestions(search_string):\n    if SEARCH_ENGINE == 'google':\n        r = {\n            'q' : search_string,\n            'cp' : '11',\n            'client' : 'psy-ab',\n            'xssi' : 't',\n            'gs_ri' : 'gws-wiz',",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "fetch_suggestions",
        "kind": 2,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "def fetch_suggestions(search_string):\n    if SEARCH_ENGINE == 'google':\n        r = {\n            'q' : search_string,\n            'cp' : '11',\n            'client' : 'psy-ab',\n            'xssi' : 't',\n            'gs_ri' : 'gws-wiz',\n            'hl' : 'en-IT',\n            'authuser' : '0'",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "def main():\n    search_string = html.unescape((' '.join(sys.argv[1:])).strip())\n    if search_string.endswith('!'):\n        search_string = search_string.rstrip('!').strip()\n        results = fetch_suggestions(search_string)\n        for r in results:\n            print(html.unescape(r))\n    elif search_string == '':\n        print('Search with %s' % CONFIG['SEARCH_ENGINE_NAME'][SEARCH_ENGINE])\n        print('End string with \"!\" to your get search suggestions')",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "SEARCH_ENGINE",
        "kind": 5,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "SEARCH_ENGINE = 'google'            # or 'duckduckgo'\nBROWSER = 'firefox'                  # or 'firefox', 'chromium', 'brave', 'lynx'\nTERMINAL = ['kitty', '--'] # or ['st', '-e'] or something like that\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "BROWSER",
        "kind": 5,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "BROWSER = 'firefox'                  # or 'firefox', 'chromium', 'brave', 'lynx'\nTERMINAL = ['kitty', '--'] # or ['st', '-e'] or something like that\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "TERMINAL",
        "kind": 5,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "TERMINAL = ['kitty', '--'] # or ['st', '-e'] or something like that\n################################################################################\nCONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']\n    },",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "CONFIG",
        "kind": 5,
        "importPath": "external.rofi.search",
        "description": "external.rofi.search",
        "peekOfCode": "CONFIG = {\n    'BROWSER_PATH' : {\n        'chrome' : ['google-chrome-stable'],\n        'firefox-developer-edition' : ['firefox-developer-edition'],\n        'chromium' : ['chromium-browser'],\n        'brave' : ['brave-browser'],\n        'lynx' : TERMINAL + ['lynx']\n    },\n    'USER_AGENT' : {\n        'chrome' : 'Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36',",
        "detail": "external.rofi.search",
        "documentation": {}
    },
    {
        "label": "valid",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def valid(name):\n    return re.search(\"^sd[a-z][0-9][0-9]*$\",name)\ndef notify(title, desc):\n    s.call([\"notify-send\", title, desc])\ndef extract_name(name):\n    \"\"\"\n    Extract /dev/ from the name\n    \"\"\"\n    return name.replace('/dev/', '').replace('/', '')\ndef get_device_from_dbus(cls):",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "notify",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def notify(title, desc):\n    s.call([\"notify-send\", title, desc])\ndef extract_name(name):\n    \"\"\"\n    Extract /dev/ from the name\n    \"\"\"\n    return name.replace('/dev/', '').replace('/', '')\ndef get_device_from_dbus(cls):\n    deviceinfo = cls.get('org.freedesktop.UDisks2.Block')\n    dev = bytearray(deviceinfo.get('Device')).replace(b'\\x00', b'').decode('utf-8')",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "extract_name",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def extract_name(name):\n    \"\"\"\n    Extract /dev/ from the name\n    \"\"\"\n    return name.replace('/dev/', '').replace('/', '')\ndef get_device_from_dbus(cls):\n    deviceinfo = cls.get('org.freedesktop.UDisks2.Block')\n    dev = bytearray(deviceinfo.get('Device')).replace(b'\\x00', b'').decode('utf-8')\n    return dev\n# Function which will run when signal is received",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "get_device_from_dbus",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def get_device_from_dbus(cls):\n    deviceinfo = cls.get('org.freedesktop.UDisks2.Block')\n    dev = bytearray(deviceinfo.get('Device')).replace(b'\\x00', b'').decode('utf-8')\n    return dev\n# Function which will run when signal is received\ndef callback_added_function(address, cls):\n    device = get_device_from_dbus(cls)\n    naming = extract_name(device)\n    DeviceName[address] = naming\n    if valid(naming):",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "callback_added_function",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def callback_added_function(address, cls):\n    device = get_device_from_dbus(cls)\n    naming = extract_name(device)\n    DeviceName[address] = naming\n    if valid(naming):\n        notify(\"USB plugged in\", \"Mounting to /media/\"+naming)\ndef callback_removed_function(address, cls):\n    device=DeviceName[address]\n    if valid(device):\n        notify(\"USB removed\", \"Unmounting from /media/\"+device)",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "callback_removed_function",
        "kind": 2,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "def callback_removed_function(address, cls):\n    device=DeviceName[address]\n    if valid(device):\n        notify(\"USB removed\", \"Unmounting from /media/\"+device)\n# Which signal to have an eye for\niface  = 'org.freedesktop.DBus.ObjectManager'\nsignal = 'InterfacesAdded'\nsignalR = 'InterfacesRemoved'\nbus.add_signal_receiver(callback_added_function, signal, iface)\nbus.add_signal_receiver(callback_removed_function, signalR, iface)",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "bus",
        "kind": 5,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "bus = dbus.SystemBus()\nDeviceName = {}\ndef valid(name):\n    return re.search(\"^sd[a-z][0-9][0-9]*$\",name)\ndef notify(title, desc):\n    s.call([\"notify-send\", title, desc])\ndef extract_name(name):\n    \"\"\"\n    Extract /dev/ from the name\n    \"\"\"",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "DeviceName",
        "kind": 5,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "DeviceName = {}\ndef valid(name):\n    return re.search(\"^sd[a-z][0-9][0-9]*$\",name)\ndef notify(title, desc):\n    s.call([\"notify-send\", title, desc])\ndef extract_name(name):\n    \"\"\"\n    Extract /dev/ from the name\n    \"\"\"\n    return name.replace('/dev/', '').replace('/', '')",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "signal",
        "kind": 5,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "signal = 'InterfacesAdded'\nsignalR = 'InterfacesRemoved'\nbus.add_signal_receiver(callback_added_function, signal, iface)\nbus.add_signal_receiver(callback_removed_function, signalR, iface)\n# Let's start the loop\nimport gi.repository.GLib as gi\nloop = gi.MainLoop()\nloop.run()",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "signalR",
        "kind": 5,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "signalR = 'InterfacesRemoved'\nbus.add_signal_receiver(callback_added_function, signal, iface)\nbus.add_signal_receiver(callback_removed_function, signalR, iface)\n# Let's start the loop\nimport gi.repository.GLib as gi\nloop = gi.MainLoop()\nloop.run()",
        "detail": "tos-udev-dbus",
        "documentation": {}
    },
    {
        "label": "loop",
        "kind": 5,
        "importPath": "tos-udev-dbus",
        "description": "tos-udev-dbus",
        "peekOfCode": "loop = gi.MainLoop()\nloop.run()",
        "detail": "tos-udev-dbus",
        "documentation": {}
    }
]